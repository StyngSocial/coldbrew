import marked from "marked";
import sanitizeHtml from "sanitize-html";

export default function useMarkdown(body) {
  const md = body;
  const tokens = marked.lexer(md);
  const html = marked.parser(tokens);
  const clean = sanitizeHtml(html);
  return clean;
}
const post =
  "As mentioned on Twitter and elsewhere, we've already had a big week and have even more to come as we cross from this week into next. CUB was just listed on CMC, DEC farming is coming to Cub Finance, we're seeing $600k+ in daily volume of CUB traded, LeoBridge is about to enter public testing and our initial CertiK audit just came through.\n\n## CUB Listed on CoinMarketCap\n\nWen CoinMarketCap?\n\nnow\n\n![image.png](https://images.hive.blog/DQmRVmx6k7i1QKrUEsmY5EWqR7TMoUq3eUCofSjF7wN4g4d/image.png)\n\nCoinMarketCap updated our listing for CUB yesterday and put us on the main site. In order to get real-time stats related to TVL, market cap, supply, etc. they requested we create our own APIs for Cub Finance that they could connect to. \n\nThanks to some fbslo magic, the APIs are ready for CMC (and other dApps we've been talking to). The listings should be updated soon (very soon) to reflect our current market cap, circulating supply and total value locked.\n\n![image.png](https://images.hive.blog/DQmVWFG6AsoN7CSQhhXQVW2EXjE6B7YWEdPwbUV44KoFLAJ/image.png)\n\nWen CoinGecko?\n\n![image.png](https://images.hive.blog/DQmbxtF7JszBXGXABFyjrVUqTeJNBkPaE7kQNGAmFr2BaFj/image.png)\n\nsoon\n\nWen Blockfolio?\n\n![image.png](https://images.hive.blog/DQmWi1S2LZc9NnbPZ5GP3nAtvJ4SSYprQnpqcZyYcThb5qg/image.png)\n\nvery soon\n\n## Daily Trading Volume of CUB | $600k +\n\n![image.png](https://images.hive.blog/DQmbciCHTZPU5WK2BT4UNXcfQAa7GGCpXByZ8dYR931CbuC/image.png)\n\nIt's crazy to see how much volume CUB is trading on a daily basis. The 24hr volume of CUB being traded is almost higher than the total depth of liquidity in the bLEO-BNB pool. \n\nUp until the CMC listing, it's been relatively difficult to see the actual trading volume of CUB. I think most of us have underestimated just how much attention and volume there is on CUB. It's trading hands at a crazy pace and we're seeing new entrants all the time. \n\nWith that said, CUB is still owned by 1000 addresses and that is relatively small compared to other similar projects as they mature. \n\nWe're still in the very early stages of the Cub Finance branch of LeoFinance. 11 days in and we're crushing it in terms of TVL, users, trading volume, etc.\n\nWith all of this in mind, it's important to keep updating our roadmap as we make progress on new Cub features and also plan out the future of Cub Finance and bLEO. \n\n## Audit Report\n\nWe finally received the first audit report from CertiK. The report looks great and no major issues were found (no surprise there, if you've seen our other posts about comparing our code to Goose's). There are a few suggestions they made regarding timelocking the Cub controlling - something we've already started working on - and a few other minor updates we can make to further beef up the security of Cub Finance. \n\nOur current step in this process is adding the timelock contract, possibly working on the other few small points they gave to us and then sending them back the updates for a final revision. After their final revision, Cub Finance will get added to the CertiK leaderboard along with the public version of the audit and how we score for security. \n\nWe're hoping to get them the updates tonight/tomorrow and get their revised report back within 24 hours of that.\n\n## [LeoBridge](https://docs.cubdefi.com/upcoming-features/leobridge) and Updated Roadmap\n\nOur goal with CUB is to build a long-term DeFi platform. Many people view platforms like Cub Finance as a short-term yield farming app but we see it as a base layer to build, adopt and modify smart contracts that can serve the CUB / bLEO economy. \n\nAfter our AMA with the BSCGemz community (and in talking to a number of other BSC players/communities), the #1 question is the future of Cub Finance. They all want to know why Cub isn't just another Goose clone that will make an appearance for 2 weeks and then drop off the map. \n\nFor us, Cub is this base layer cake. We're able to use Cub and the distribution mechanism of farming to build out more DeFi apps, adopt other smart contracts, etc.\n\nTo make this clear to our community and to the broader BSC/DeFi space, we're going to release a more beefy roadmap for Cub Finance specifically and continually update it with our progress. \n\nToday, we added an Upcoming Features tab to the Cub docs. If you head over there, you'll see a new page titled \"[LeoBridge](https://docs.cubdefi.com/upcoming-features/leobridge)\".\n\nThis page dives into some details about the newest application we're launching under the LeoFi/Cub Finance branch of LeoFinance.\n\nLeoBridge will allow seamless cross-blockchain swaps from ERC20 -> BEP20 (and vice versa). \n\nAll swaps will route their orders through the tri-token economy of LeoFinance (LEO, bLEO, wLEO) and a 0.25% swap fee will be automatically sent to the CUB treasury and buy/burn CUB and bLEO.\n\nWe also added a new tutorial to the docs to show you how to use the F.R.I.D.A.Y. discord bot to track your CUB LP positions in real-time:\n\nhttps://docs.cubdefi.com/tutorials/f.r.i.d.a.y.-a-community-created-tool-for-tracking-cub-farming\n\n\n\nPosted Using [LeoFinance <sup>Beta</sup>](https://leofinance.io/@leofinance/cub-listed-on-coinmarketcap-usd600k-in-daily-volume-leobridge-update-and-code-audits)";
// const markdownExp = /!?\[([A-z]|\d)+\.[A-z]+\]\([A-z|\d|:|\/|.|-]+\)/g;
// const urlExp = /https?:\/\/(www.)?([A-z|/d])*.[A-z]*(\/.*)/;
// const htmlExp = /<(\/?)[A-z]+(.*)>/g;
// const headingTags = /#/g;
// const removedMarkdown = body.replace(markdownExp, "");
// const removedHtml = removedMarkdown.replace(htmlExp, "");
// const removedUrl = removedHtml.replace(urlExp, "");
// const whitespace = removedUrl.replace(/\n/g, "");
// const tags = whitespace.replace(headingTags, "");
// const postLimit = tags.slice(0, 776);
// const index = postLimit.lastIndexOf(".");
// const postBody = postLimit.slice(0, index);
